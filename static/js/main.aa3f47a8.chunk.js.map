{"version":3,"sources":["logo.svg","nav.js","About.js","Main.js","Footer.js","privacy-policy.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","react_default","a","createElement","react_router_dom","to","src","logo","class","alt","React","Component","About","className","Main","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","link","state","preventDefault","Data","handleInput","setState","target","value","_ref","asyncToGenerator","regenerator_default","mark","_callee","self","response","data","jsonObject","results","postPage","is_postPage","shortcode_media","edge_sidecar_to_children","display_resources","is_video","video_url","srcs","wrap","_context","prev","next","assertThisInitialized","loading","fetch","sent","ok","text","match","slice","JSON","parse","entry_data","hasOwnProperty","is_public","PostPage","graphql","push","edges","map","x","_x$node","node","img_src","pop","result_urls","is_loaded","alert","status","stop","_x","apply","arguments","saveFileFromUrl","_ref2","_callee2","url","fileName","_context2","indexOf","document","href","download","body","appendChild","click","removeChild","window","open","_x2","then","blob","URL","createObjectURL","Blob","toDataURL","_this2","_this$state","onSubmit","placeholder","onChange","type","style","marginLeft","marginBottom","BarLoader_default","length","result","key","controls","loop","autoPlay","onClick","Footer","Policy","App","nav","react_router","path","exact","component","src_Footer","Boolean","location","hostname","ReactDOM","render","StrictMode","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aa3f47a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c91c7ca7.svg\";","import React from 'react';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport logo from './logo.svg' ;\n\n\n\n\nclass Nav extends React.Component {\n\nrender(){\n  return (\n\n<header>\n    <Link to='/'><img src={logo} class=\"logo\" alt=\"logo\"/></Link> \n    <nav>\n      <ul>\n    <li>\n        <Link to='/'>Home</Link>  \n    </li>  \n    <li>\n        <Link to='/about'>About</Link>  \n    </li>   \n    <li>\n        <Link to='/privacy-policy'>Privacy Policy</Link>  \n    </li>     \n        \n       \n      </ul>\n    </nav>\n  </header>\n);\n}\n}\n\n    export default Nav;\n","import React from 'react';\n\n\n\n\nclass About extends React.Component {\n\nrender(){\n  return (\n\n<div className='idl_about'>\n    <h2>About page</h2>\n    <p>If you require any more information or have any questions about our privacy policy, please feel free to contact us by email</p>\n    <p>At <b>tiktokdownloader.magicalstack.com</b> we consider the privacy of our visitors to be extremely important. This privacy policy document describes in detail the types of personal information is collected and recorded by <b>tiktokdownloader.magicalstack.com</b> and how we use it.</p>\n    <p><strong>Log Files</strong><br/> Like many other Web sites, <b>tiktokdownloader.magicalstack.com</b> makes use of log files. These files merely logs visitors to the site â€“ usually a standard procedure for hosting companies and a part of hosting services's analytics. The information inside the log files includes internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date/time stamp, referring/exit pages, and possibly the number of clicks. This information is used to analyze trends, administer the site, track user's movement around the site, and gather demographic information. IP addresses, and other such information are not linked to any information that is personally identifiable.</p>\n    <p><strong>Cookies and Web Beacons</strong><br/><b>tiktokdownloader.magicalstack.com</b> uses cookies to store information about visitors' preferences, to record user-specific information on which pages the site visitor accesses or visits, and to personalize or customize our web page content based upon visitors' browser type or other information that the visitor sends via their browser.</p>\n  </div>\n);\n}\n}\n\n    export default About;","import React from 'react';\nimport BarLoader from \"react-spinners/BarLoader\";\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      link: \"https://www.instagram.com/p/CCOHYetBRiI/\",\n      result_urls: [],\n      loading: false,\n      is_loaded:false,\n      is_public:false,\n    };\n  }\n\n  handleSubmit = e => {\n    let link = this.state.link;\n    e.preventDefault();\n    if (link) {\n      this.Data(link);\n    }\n  };\n\n  handleInput = e => {\n    this.setState({\n      link: e.target.value\n    });\n  };\n\n  Data = async link => {\n    const self = this;\n    if(link){\n      self.setState({ loading: true });\n    }\n    let response = await fetch(link);\n    if (response.ok) { \n      let data = await response.text();\n      const jsonObject = data\n      .match(\n        /<script type=\"text\\/javascript\">window\\._sharedData = (.*)<\\/script>/\n      )[1]\n      .slice(0, -1);\n\n    const results = JSON.parse(jsonObject);\n    var postPage = results.entry_data;\n\n    var is_postPage =  postPage.hasOwnProperty(\"PostPage\");\n  \n    self.setState({ is_public: is_postPage });\n    if(self.state.is_public){\n      const shortcode_media = results.entry_data.PostPage[0].graphql.shortcode_media;\n      const {\n        edge_sidecar_to_children,\n        display_resources,\n        is_video,\n        video_url,\n      } = shortcode_media;\n      let srcs = [];\n\n    if (is_video) {\n      srcs.push({\n        src: video_url,\n        is_video: true,\n      });\n    } else if (edge_sidecar_to_children) {\n      srcs = edge_sidecar_to_children.edges.map(x => {\n        const {\n          display_resources,\n          is_video,\n          video_url\n        } = x.node;\n\n        const img_src = display_resources.pop().src;\n\n        if (is_video) {\n          return {\n            src: video_url,\n            is_video: true,\n\n          };\n        } else {\n          return {\n            src: img_src,\n            is_video: false,\n          };\n        }\n      });\n    } else {\n      const src = display_resources.pop().src;\n      srcs.push({\n        src: src,\n        is_video: false,\n\n      });\n    }\n\n\n    self.setState({\n      result_urls: srcs,\n      loading: false,\n      is_loaded:true,\n    });\n\n    }else{\n      //is privat account\n      self.setState({\n        loading: false,\n        is_loaded:true,\n      });\n    }\n\n    //esults.contains(results.entry_data.PostPage[0].graphql.shortcode_media);\n    //console.log(is_public);\n    //const shortcode_media = results.entry_data.PostPage[0].graphql.shortcode_media;\n    //console.log(shortcode_media);\n/*\n    const {\n      edge_sidecar_to_children,\n      display_resources,\n      is_video,\n      video_url,\n    } = shortcode_media;\n\n    console.log(is_video);\n    console.log(edge_sidecar_to_children);\n    let srcs = [];\n\n    if (is_video) {\n      srcs.push({\n        src: video_url,\n        is_video: true,\n      });\n    } else if (edge_sidecar_to_children) {\n      srcs = edge_sidecar_to_children.edges.map(x => {\n        const {\n          display_resources,\n          is_video,\n          video_url\n        } = x.node;\n\n        const img_src = display_resources.pop().src;\n\n        if (is_video) {\n          return {\n            src: video_url,\n            is_video: true,\n\n          };\n        } else {\n          return {\n            src: img_src,\n            is_video: false,\n          };\n        }\n      });\n    } else {\n      const src = display_resources.pop().src;\n      srcs.push({\n        src: src,\n        is_video: false,\n\n      });\n    }\n\n\n    self.setState({\n      result_urls: srcs,\n      loading: false\n    });\n*/\n    } else {\n      alert(\"HTTP-Error: \" + response.status);\n    }\n\n    \n\n\n\n  }\n\n  saveFileFromUrl = async url => {\n    const fileName = 'file' + (url.indexOf(\".mp4\") > 0 ? \".mp4\" : \".jpg\");\n    try {\n      var a = document.createElement('a');\n      a.href = url;\n      a.download = fileName;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } catch (e) {\n      window.open(url, \"_blank\");\n    }\n  };\n\n  toDataURL(url) {\n    return fetch(url).then((response) => {\n      return response.blob();\n    }).then(blob => {\n      return window.URL.createObjectURL(new Blob([blob]));\n    });\n  }\n\n  async download(url) {\n    const fileName = 'file' + (url.indexOf(\".mp4\") > 0 ? \".mp4\" : \".jpg\");\n    const a = document.createElement(\"a\");\n    a.href = await this.toDataURL(url);\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  render() {\n    let {\n      link,\n      result_urls,\n      loading,\n      is_public,\n      is_loaded\n    } = this.state;\n    return (\n        <div className = \"Main\">\n            <h1> instaLoad </h1>\n\n      <h3> Download Instagram Videos, Photos and Albums < br / > from any public account </h3>    \n      <form className = \"flex-form\" onSubmit = {\n        this.handleSubmit\n      } >\n      <input className=\"search\" placeholder = \"Enter post link here\" \n          value = {link}\n          onChange = {\n            this.handleInput\n          }/> \n          <input type = \"submit\" value=\"Search\" />\n              \n\n      </form>\n      {loading && (\n                <div style={{ marginLeft: \"-24px\", marginBottom: \"24px\" }}>\n                  <BarLoader/>\n                </div>\n      )}\n      {is_loaded && !is_public &&(\n        <div className = \"idl_result\" >\n          <p>this account is private</p>\n          </div>\n      )}\n      {\n        result_urls && result_urls.length > 0 && ( \n          <div className = \"idl_result\" > {\n            result_urls.map(result => ( \n            <div className = \"card__image-container\" key = {result_urls.indexOf(result)} >\n\n              {!result.is_video ? ( <img src = {result.src} class=\"idl_img\" alt=\"download\"/>) : ( <video class=\"idl_video\" controls loop autoPlay >\n                  <source src = {result.src} type = \"video/mp4\" / >\n                  Your browser does not support the video tag. </video>)\n              } {/*<a download=\"something.txt\" href={result.src} className = \"idl_buttom\" > Download </a>*/}\n              {<button onClick = {() =>this.download(result.src)} className = \"idl_buttom\" > Download </button>}\n\n              </div>\n            ))\n          } \n          </div>\n        )\n      } \n      </div>\n      \n\n    );\n  }\n}\n\nexport default Main;","import React from 'react';\n\nclass Footer extends React.Component {\nrender(){\n  return (\n<div className='footer'>\n<div class=\"copyrights\">\n    <p class=\"footer-text\">\n        <span>All rights reserved</span> Â©InstaLoad\n    </p>\n</div>\n</div>\n);\n}\n}\nexport default Footer;","import React from 'react';\n\n\n\n\nclass Policy extends React.Component {\n\nrender(){\n  return (\n\n<div className='idl_pplicy'>\n    <h2>Privacy Policy</h2>\n    <p>If you require any more information or have any questions about our privacy policy, please feel free to contact us by email</p>\n    <p>At <b>tiktokdownloader.magicalstack.com</b> we consider the privacy of our visitors to be extremely important. This privacy policy document describes in detail the types of personal information is collected and recorded by <b>tiktokdownloader.magicalstack.com</b> and how we use it.</p>\n    <p><strong>Log Files</strong><br/> Like many other Web sites, <b>tiktokdownloader.magicalstack.com</b> makes use of log files. These files merely logs visitors to the site â€“ usually a standard procedure for hosting companies and a part of hosting services's analytics. The information inside the log files includes internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date/time stamp, referring/exit pages, and possibly the number of clicks. This information is used to analyze trends, administer the site, track user's movement around the site, and gather demographic information. IP addresses, and other such information are not linked to any information that is personally identifiable.</p>\n    <p><strong>Cookies and Web Beacons</strong><br/><b>tiktokdownloader.magicalstack.com</b> uses cookies to store information about visitors' preferences, to record user-specific information on which pages the site visitor accesses or visits, and to personalize or customize our web page content based upon visitors' browser type or other information that the visitor sends via their browser.</p>\n \n    \n  </div>\n);\n}\n}\n\n    export default Policy;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './App.css';\nimport Nav from './nav.js';\nimport About from './About.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport Policy from './privacy-policy';\n\nclass App extends React.Component {\nrender(){\n  return(\n<div className='container'>\n    <Router>\n    <Nav />\n\n<Switch>\n      <Route path=\"/\" exact component={Main}/>\n      <Route path=\"/about\" component={About}/>\n      <Route path=\"/privacy-policy\" component={Policy}/>\n\n</Switch>\n<Footer />\n\n</Router>\n</div>\n    \n\n    \n\n    \n  );\n}\n\n}\n\n    export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//sections\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}